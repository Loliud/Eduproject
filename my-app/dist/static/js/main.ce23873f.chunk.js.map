{"version":3,"sources":["components/home/home.js","actions/actions.js","constants/types.js","components/goTraining/GoTraining.js","components/auth/signIn.js","components/auth/signUp.js","components/goTraining/chapter/Chapter.js","App.js","serviceWorker.js","reducer/authReducer.js","reducer/chapterReducers.js","reducer/myReducer.js","config/fbConfig.js","index.js"],"names":["Home","props","state","this","auth","profile","loginAndSignInButton","uid","id","avar","className","to","color","src","alt","Component","connect","firebase","fetchChapter","dispatch","axios","get","then","res","type","chapters","data","GoTraining","arrayToNav","array","map","item","index","key","href","name","arrayToBox","Badge","keyword","links","link","target","rel","Button","loading","arrayDocs","fetchChapters","asyncLoading","setState","Spinner","style","width","height","Row","Col","sm","Promise","resolve","reject","setTimeout","compose","actions","firestoreConnect","collection","SignIn","onSubmit","event","preventDefault","credentials","email","password","goSignIn","onChange","value","authError","Form","FormGroup","Label","for","Input","required","Alert","getState","getFirebase","signInWithEmailAndPassword","catch","SignUp","newUser","goSignUp","getFirestore","firestore","createUserWithEmailAndPassword","stringArray","split","length","console","log","doc","user","set","excersises","err","Chapter","objectLinks","number","match","params","push","i","submitForm","ayncLoading","formRender","rows","cols","placeholder","ex_1","ex_2","ex_3","getChapters","currentEx","chapter","find","App","path","exact","component","Boolean","window","location","hostname","initialState","myReducer","action","combineReducers","authReducer","chapterReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce23873f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nimport './home.css';\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    render() {\n        const { auth, profile } = this.props;\n        const loginAndSignInButton = auth.uid ? <div id=\"avar\"><h3>{profile.avar}</h3></div> : (<div id=\"auth\">\n        <Link className=\"wrap-button\" to=\"/signin\"><button color=\"primary\" id=\"sign-in\">Sign In<span><img src=\"http://pngimg.com/uploads/katana/katana_PNG17.png\" alt=\"katana\" /></span></button></Link>\n        <Link className=\"wrap-button\" to=\"/signup\"><button color=\"warning\" id=\"sign-up\">Sign Up<span><img src=\"http://pngimg.com/uploads/katana/katana_PNG17.png\" alt=\"katana\" /></span></button></Link>\n        </div>) ;\n        return (\n            <div id=\"home-wrap\">\n                <div id=\"menu\">\n                    <div className=\"overlay\">\n                        <h1>CoderS nihonGo</h1>\n                        <ul id=\"list\">\n                            <Link id=\"link-wrap\" to=\"/gotraining\"><li className=\"item\"><span><img src=\"http://pngimg.com/uploads/katana/katana_PNG14.png\" alt=\"sword\" /></span>Go training</li> </Link>\n                            <li className=\"item\"><span><img src=\"http://pngimg.com/uploads/katana/katana_PNG14.png\" alt=\"sword\" /></span>Guide</li>\n                            <li className=\"item\"><span><img src=\"http://pngimg.com/uploads/katana/katana_PNG14.png\" alt=\"sword\" /></span>Contact</li>\n                            {/* <li className=\"item\"><span><img src=\"http://pngimg.com/uploads/katana/katana_PNG14.png\"/></span>Contact</li> */}\n                            {/* <li className=\"item\"><span><i className=\"fas fa-arrow-right\"></i></span>Contact</li> */}\n                        </ul>\n                    </div>\n\n                </div>\n                {loginAndSignInButton}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Home);\n\n","import axios from 'axios';\nimport *as types from '../constants/types';\nexport const fetchChapter = () =>{\n    return (dispatch) =>{\n        axios.get('https://5d3029eb28465b00146aaca5.mockapi.io/api/chapterEdu')\n        .then(res =>{\n            // console.log(res.data);\n            dispatch({type: types.GET_CHAPTERS, chapters: res.data});\n        });\n    }\n}\n\n\nexport const signIn = (credentials) =>{\n    return (dispatch, getState, {getFirebase}) =>{\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        )\n        .then(() =>{\n            dispatch({type: types.LOGIN_SUCCESS});\n        })\n        .catch(() =>{\n            dispatch({type: types.LOGIN_FAILED});\n        });\n    }\n}\n\nexport const signUp = (newUser) =>{\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res) =>{\n            const stringArray = newUser.name.split(' ');\n            let avar = '';\n\n            if(stringArray.length > 1){\n                console.log(stringArray);\n                 avar = stringArray[stringArray.length - 2][0] + stringArray[stringArray.length - 1][0];\n            }else{\n                 avar = stringArray[0][0];\n            }\n            \n            return firestore.collection('appUsers').doc(res.user.uid).set({\n                name: newUser.name,\n                avar: avar,\n                excersises: []\n            });\n        }).then(() =>{\n            dispatch({type: types.SIGN_SUCCESS});\n        })\n        .catch(err =>{\n            dispatch({type: types.SIGN_UP_FAILED});\n        });\n    }\n}\n\nexport const submitForm = (excersises, key, profile) =>{\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\n        const firestore = getFirestore();\n        firestore.collection('appUsers').doc(key).set({\n            name: profile.name,\n            avar: profile.avar,\n            excersises: excersises\n        });\n    }\n}","export const GET_CHAPTERS = 'GET_CHAPTERS';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\nexport const SIGN_UP_FAILED = 'SIGN_UP_FAILED';\nexport const SIGN_SUCCESS = 'SIGN_SUCCESS'","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Badge, Button, Spinner } from 'reactstrap';\nimport {connect} from 'react-redux';\nimport *as actions from '../../actions/actions';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport {compose} from 'redux';\nimport {Redirect} from 'react-router-dom';\nimport './gotraining.css';\n\n\n\n\n\nclass GoTraining extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            arrayDocs: []\n        }\n    }\n    arrayToNav = (array) => {\n        return array.map((item, index) => {\n            return (\n                <a key={index} href={`#${item.name}`}><li >{item.name}</li></a>\n            );\n        });\n    }\n    arrayToBox = (array) => {\n        return array.map((item, index) => {\n            return ( \n                <div className=\"doc-box\" id={item.name} key={index}>\n                    <h3>{item.name}</h3>\n                    {/* <p>{item.content}</p> */}\n                    <Badge color=\"info\">Keyword :</Badge>\n                    <p>{item.keyword}</p>\n                    <Badge color=\"success\">Links :</Badge><br/>\n                    {\n                        item.links.map((link, index) =>{\n                            return(\n                                <div key={index} ><a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{link}</a></div>        \n                            );\n                        })\n                    }\n                    <br/>\n                    <Link to={`/excersise/${item.id}`}><Button color=\"danger\">Go excersise</Button></Link>\n                    \n                </div>\n            )\n        });\n    }\n\n    componentDidMount(){\n        this.props.fetchChapters();\n        asyncLoading().then(() =>{\n            this.setState({\n                loading: false\n            })\n        });\n    }\n\n\n    render() {\n        const {loading} = this.state;\n        const {arrayDocs, auth} = this.props;\n        if(!auth.uid) return <Redirect to=\"/signin\"/>\n        if(loading){\n            return (\n                <div id=\"loading-train\">\n                <Spinner style={{ width: '8rem', height: '8rem', color:\"aqua\" }} />\n                </div>\n            )\n        }\n        return (\n            <div id=\"wrap-training\">\n                {/* <h1>CoderS nihonGo</h1> */}\n                {/* <Col sm={4} id=\"navbar\">\n                        <ul id=\"list-item\">\n                            {this.arrayToNav(arrayDocs)}                       \n                        </ul>\n                </Col> */}\n                <Row id=\"wrap-content\">\n                    {/* <Col sm={4} id=\"fake\">\n                        <h1>Ken</h1>\n                    </Col> */}\n                    <Col sm={12} id=\"content\">\n                        {this.arrayToBox(arrayDocs)}\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nvar asyncLoading = () =>{\n    return new Promise((resolve, reject) =>{\n        setTimeout(() =>{\n            resolve();\n        }, 500)\n    });\n}\nconst mapStateToProps = (state) =>{\n    // console.log(state);\n    return {\n        arrayDocs: state.chapters,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) =>{\n        return {\n            fetchChapters : () => dispatch(actions.fetchChapter())\n        }\n}\n\nexport default \n    compose(\n        connect(mapStateToProps, mapDispatchToProps),\n        firestoreConnect([\n            {collection: 'appUsers'}\n        ])\n)(GoTraining);","import React, { Component } from 'react';\nimport { FormGroup, Label, Input, Form, Spinner, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport *as actions from '../../actions/actions';\nimport {Redirect} from 'react-router-dom';\nimport './style.css';\n\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            email: '',\n            password: ''\n        }\n    }\n\n    componentDidMount() {\n        // this simulates an async action, after which the component will render the content\n        demoAsyncCall().then(() => this.setState({ loading: false }));\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        const credentials = {\n            email: this.state.email,\n            password: this.state.password\n        }\n        this.props.goSignIn(credentials);\n    }\n    onChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n\n    render() {\n       \n        const {authError} = this.props.state.auth;\n        const { loading, email } = this.state;\n        const {auth} = this.props;\n        if(auth.uid) return <Redirect to=\"/\"/>\n        if (loading) { // if your component doesn't have to wait for an async action, remove this block \n            return <div className=\"loading\"><Spinner style={{ width: '8rem', height: '8rem', color: \"tomato\" }} /></div>; // render null when app is not ready\n        }\n\n        return (\n            <div id=\"wrap-auth\">\n                <div id=\"overlay\">\n                    <Form id=\"box-form\" onSubmit={this.onSubmit}>\n                        <FormGroup>\n                            <Label for=\"Gmail\">Gmail</Label>\n                            <Input type=\"text\" name=\"email\" id=\"Gmail\" value={email} onChange={this.onChange} required />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"examplePassword\">Password</Label>\n                            <Input type=\"password\" name=\"password\" id=\"examplePassword\" onChange={this.onChange} required />\n                        </FormGroup>\n                        <button color=\"danger\">LOGIN</button>\n                        {authError ? <Alert color=\"danger\">\n                            This is a danger alert — check it out!\n                                </Alert> : null}\n                    </Form>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nfunction demoAsyncCall() {\n    return new Promise((resolve) => setTimeout(() => resolve(), 500));\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state,\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        goSignIn: (credentials) => dispatch(actions.signIn(credentials))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, {Component} from 'react';\nimport { FormGroup, Label, Input, Form, Spinner } from 'reactstrap';\nimport './style.css';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport *as actions from '../../actions/actions';\n\n\n\nclass SignUp extends Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            loading: true,\n            email: '',\n            password: '',\n            name: '',\n        }\n    }\n    componentDidMount() {\n        // this simulates an async action, after which the component will render the content\n        demoAsyncCall().then(() => this.setState({ loading: false }));\n      }\n\n    onSubmit = (event) =>{\n        event.preventDefault();\n        const newUser = {\n            email: this.state.email,\n            password: this.state.password,\n            name: this.state.name\n        };\n        this.props.goSignUp(newUser);\n    }\n    onChange = (event) =>{\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n\n    render(){\n        const {email, name} = this.state;\n        const { loading } = this.state;\n        const {auth} = this.props;\n        if(auth.uid) return <Redirect to=\"/\"/>\n\n        \n        if(loading) { // if your component doesn't have to wait for an async action, remove this block \n        return <div className=\"loading\"><Spinner style={{ width: '8rem', height: '8rem', color:\"tomato\" }} /></div>; // render null when app is not ready\n        }\n      \n        return (\n            <div id=\"wrap-auth\">\n            <div id=\"overlay\">\n            <Form id=\"box-form\" onSubmit={this.onSubmit}>\n                <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Input type=\"email\" name=\"email\" id=\"email\" value={email} onChange={this.onChange} required/>\n                </FormGroup>        \n                <FormGroup>\n                    <Label for=\"examplePassword\">Password</Label>\n                    <Input type=\"password\" name=\"password\" id=\"examplePassword\" onChange={this.onChange} required/>\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"name\">Name</Label>\n                    <Input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.onChange} required/>\n                </FormGroup>\n                <button  color=\"danger\">SIGN UP</button>\n            </Form>\n            </div>\n        </div>\n        )\n    }\n}\nfunction demoAsyncCall() {\n    return new Promise((resolve) => setTimeout(() => resolve(), 500));\n  }\n\n\nconst mapStateToProps = (state) =>{\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) =>{\n    return {\n        goSignUp: (newUser) =>{\n            dispatch(actions.signUp(newUser))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport { Button, Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport *as actions from '../../../actions/actions';\nimport {Redirect} from 'react-router-dom';\nimport './style.css';\n\n\nclass Chapter extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            loading: false,\n            ex_1: '',\n            ex_2: '',\n            ex_3: ''\n        }\n\n\n    }\n    componentDidMount(){\n        this.props.getChapters();\n        let { id } = this.props.match.params;\n        var currentEx;\n        if(id && this.props.profile.excersises){\n            currentEx = this.props.profile.excersises[id - 1];\n        }\n        this.setState({\n            ...currentEx\n        });\n    }\n\n    onSubmit = (event) =>{\n        event.preventDefault();\n        let objectLinks = {\n            number : this.props.match.params.id,\n            ...this.state\n        }\n        const {auth, profile} = this.props;\n        let excersises = profile.excersises;\n        console.log(excersises);\n\n        if(excersises && excersises.length < 1){\n            excersises.push(objectLinks);\n        }else{\n           \n                var key = true;\n                for(let i = 0; i < excersises.length; i++){\n                    if(excersises[i].number === objectLinks.number){\n                        excersises[i] = objectLinks;\n                        key = false;\n                        break;\n                    }\n                }\n                if(key){\n                    excersises.push(objectLinks);\n                }\n           \n           \n        }\n\n\n\n\n        this.props.submitForm(excersises, auth.uid, profile);\n\n        // loading status\n        this.setState({\n            loading: true\n        });\n        // ngung loading\n        ayncLoading().then(res =>{\n            this.setState({\n                loading: false\n            });\n        });\n    }\n    onChange = (event) =>{\n        let name = event.target.name;\n        let value = event.target.value;\n        this.setState({\n            [name] : value\n        });\n      \n    }\n    formRender = (array) => {\n        if(array){\n            return array.map((item, index) => {\n                return (\n                    <form onSubmit={this.onSubmit} key={index} id=\"ex-box\">\n                        <img src=\"http://pngimg.com/uploads/katana/katana_PNG45.png\" alt=\"katana\" />\n                        <h3>Excersise {index + 1}</h3>\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={item}>{item}</a>\n                        <textarea name={`ex_${index + 1}`} value={this.state[`ex_${index + 1}`]} rows=\"4\" cols=\"50\" required placeholder=\" Link ném vào đây ae \" onChange={this.onChange} required></textarea>\n                        <Button type=\"submit\" color=\"info\">Submit</Button>\n                    </form>\n                )                                                                                                                                                                                   \n            });\n        }\n       \n    }\n    \n\n    render() {\n        const { chapters, match,auth } = this.props;\n        const {loading} = this.state;\n        const { id } = match.params;\n        let chapter = chapters.find((chapter) => {\n            return chapter.id === id;\n        });\n        if(!auth.uid){\n            return  <Redirect to=\"/\"/>\n        }\n        if(!chapter){\n            chapter = [];\n        }\n        if(loading){\n            return (\n                <div id=\"loading-train\">\n                    <h1>Lưu thành công</h1>\n                <Spinner style={{ width: '8rem', height: '8rem', color:\"aqua\" }} />\n                </div>\n            )\n        }\n        return (\n            <div id=\"chapter\">\n                <div>\n                    <h1>Excersises daily</h1>\n\n                </div>\n                <div id=\"form\">\n                    {/* <div id=\"go-name\">\n                <label>Name</label><input type=\"text\" required />\n                <div id=\"warning-name\">\n                    <p>Hiện tại chưa có chức năng đăng nhập. Ae điền đúng tên của mình, điền sai coi như chưa nộp bài :))</p>\n                </div>\n            </div> */}\n                    <div id=\"list-excersises\">\n                       {this.formRender(chapter.excersises)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        chapters: state.chapters,\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) =>{\n    return {\n        getChapters: () => dispatch(actions.fetchChapter()),\n        submitForm: (objectLinks, key, profile) => dispatch(actions.submitForm(objectLinks, key, profile))\n    }\n}\n\nconst ayncLoading = () =>{\n    return new Promise((resolve, reject) =>{\n        setTimeout(()=>{\n            resolve();\n        }, 800);\n    });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chapter);","import React, { Component } from 'react';\nimport Home from './components/home/home.js';\nimport GoTraining from './components/goTraining/GoTraining';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport SignIn from './components/auth/signIn';\nimport SignUp from './components/auth/signUp';\nimport Chapter from './components/goTraining/chapter/Chapter';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/gotraining\" component={GoTraining} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/excersise/:id\"  component={Chapter} />\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import *as types from '../constants/types';\nlet initialState = {\n    authError: null\n};\n\nconst myReducer = (state = initialState, action) =>{\n    switch (action.type) {\n        case types.LOGIN_FAILED:\n            console.log('Login failed');\n            return{\n                ...state,\n                authError: 'Login failed'\n            }\n        case types.LOGIN_SUCCESS:\n            console.log('Login success');\n            return{\n                ...state,\n                authError: null\n            }\n        case types.SIGN_SUCCESS:\n            console.log('Sign up success');\n            return {\n                ...state,\n                authError: null\n            }\n        case types.SIGN_UP_FAILED:\n            console.log('Sign up failed');\n            return {\n                ...state,\n                authError: 'Sign up failed'\n            }\n        default: \n            return state;\n    }\n}\n\nexport default myReducer;","let initialState = [];\n\nconst myReducer = (state = initialState, action) =>{\n    switch (action.type) {\n        case 'GET_CHAPTERS':\n            state = action.chapters;\n            return [...state]; \n\n        default: \n            return [...state];\n    }\n}\n\nexport default myReducer;","import {combineReducers} from 'redux';\nimport authReducer from './authReducer.js';\nimport chapterReducers from './chapterReducers';\nimport {firestoreReducer} from 'redux-firestore';\nimport {firebaseReducer} from 'react-redux-firebase';\n\n\nconst myReducer = combineReducers({\n    auth: authReducer,\n    chapters: chapterReducers,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\n\nexport default myReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\n var config = {\n    apiKey: \"AIzaSyBoGEpPb5IoBRKjNaif5E2ml2rUis-p02w\",\n    authDomain: \"conihongo.firebaseapp.com\",\n    databaseURL: \"https://conihongo.firebaseio.com\",\n    projectId: \"conihongo\",\n    storageBucket: \"\",\n    messagingSenderId: \"710971001339\",\n    appId: \"1:710971001339:web:68a0ba8e963bc9b98ca35e\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(config);\n  firebase.firestore().settings({});\n\n\n\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport myReducer from './reducer/myReducer';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\n\nconst store = createStore(myReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'appUsers', attachAuthIsReady: true })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>\n        , document.getElementById('root'));\n\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}